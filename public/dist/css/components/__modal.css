.modal-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
}



.modal {
    background-color: #3e3e3e;
    padding: 2em;
    border-radius: 10px;
    width: 90%;
    max-width: fit-content;
    width: 70%;
    box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.5);
    animation: fadeIn 0.3s ease-in-out;
    display: flex;
    flex-direction: column;
    gap: 1em;
}

.modal-header {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 1em;
}

.btn-save {
    background-color: green;
    color: white;
}

.btn-save:hover {
    background-color: limegreen;
    box-shadow: 0px 8px 16px rgba(0, 255, 0, 0.5);
    scale: 1.05;
}

.btn-cancel {
    background-color: darkred;
    color: white;
}

.btn-cancel:hover {
    background-color: red;
    box-shadow: 0px 8px 16px rgba(255, 0, 0, 0.5);
    scale: 1.05;
}


.delete-btn {
    background-color: red;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
}

.delete-btn:hover {
    background-color: darkred;
    box-shadow: 0px 8px 16px rgba(255, 0, 0, 0.5);
    scale: 1.05;
}

.trash-icon {
    height: 25px;
    width: 25px;
    filter: invert(1);
}

.modal .password-container {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    gap: 10px;
    flex-wrap: wrap;
    margin: 1em 0;
    font-size: 1.2em;
    align-items: center;
}

.modal .password-container label {
    font-weight: bold;
    margin-bottom: 0.5em;
}

.modal .password-container input {
    padding: 0.5em;
    font-size: 1em;
    border-radius: 5px;
    border: none;
    font-family: Arial, sans-serif;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.3);
    background-color: #2e2e2e;
    color: white;
    width: 100%;
}


.modal {
    animation: spawnModal 0.4s ease-out;
}

@keyframes spawnModal {
    0% {
        transform: translate(0, -100vh);
        opacity: 0;
    }
    100% {
        transform: translate(0, 0);
        opacity: 1;
    }
}

.modal-container {
    animation: bgModalSpawn 0.2s ease-in-out;
    background-color: rgba(0, 0, 0, 0.90);
}

@keyframes bgModalSpawn {
    0% {
        background-color: rgba(0, 0, 0, 0);
    }
    100% {
        background-color: rgba(0, 0, 0, 0.90);
    }
    
}

.modal-close {
    animation: closeModalAnim 0.2s ease-out forwards;
}

.modal-close-bg {
    animation: closeModalBg 0.2s ease-in-out forwards;
}

@keyframes closeModalAnim {
    0% {
        transform: scale(1);
        opacity: 1;
    }
    100% {
        transform: scale(0.5);
        opacity: 0;
    }
}

@keyframes closeModalBg {
    0% {
        background-color: rgba(0, 0, 0, 0.90);
    }
    70% {
        background-color: rgba(0, 0, 0, 0);
    }
    100% {
        background-color: rgba(0, 0, 0, 0);
    }
}


.stock-chk-container {
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    margin: 20px;
}

.stock-chk-container label {
    display: grid;
    place-items: center;
    font-size: 1.5em;
    cursor: pointer;
}

.stock-chk-container input {
    width: 5em;
    height: 5em;
    cursor: pointer;
}

.stock-chk-container input[type="checkbox"] {
    appearance: none;
    background-color: #2e2e2e;
    /* background-color: #f22; */
    border: 2px solid #888;
    border-radius: 8px;
    width: 5em;
    height: 5em;
    cursor: pointer;
    position: relative;
    transition: border-color 0.2s, box-shadow 0.2s;
    outline: none;
    transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;
}

.stock-chk-container input[type="checkbox"]:hover {
    border-color: #aaa;
    box-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
}

.stock-chk-container input[type="checkbox"]::after {
    content: '✗';
    color: #aaa;
    font-size: 3em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}



.stock-chk-container input[type="checkbox"]:checked {
    background-color: #4caf50;
    border-color: #4caf50;
    box-shadow: 0 0 8px rgba(76, 175, 80, 0.5);
}

.stock-chk-container input[type="checkbox"]:checked::after {
    content: '✓';
    color: white;
    font-size: 3em;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


.stock-chk-container div {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.modal-actions {
    display: flex;
    justify-content: space-evenly;
    gap: 20px;
    margin-top: 20px;
}

.cancel {
    background-color: red;
    color: white;
}

.cancel:hover {
    background-color: darkred;
    transform: scale(1.02);
    box-shadow: red 0 0 8px;
}


.save {
    background-color: #4caf50;
    color: white;
}

.save:hover {
    background-color: darkgreen;
    box-shadow: #4caf50 0 0 8px;
    transform: scale(1.02);
}


@media (min-width: 980px) {
    .stock-chk-container {
        gap: 10em;
    }

}

@media (max-width: 980px) {
    .stock-chk-container {
        gap: 2em;
    }
}

@media (max-width: 600px) {
    .stock-chk-container {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        margin: 20px;
    }
    .stock-chk-container div {
        display: grid;
        place-items: end;
        align-items: center;
        place-content: center;
        gap: 10px;
        grid-template-columns: 1fr 1fr;
    }
    .modal-actions {
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
    .modal-actions .btn {
        width: 100%;
    }
    .modal-footer .btn {
        width: 100%;
    }
    .modal-footer {
        display: flex;
        flex-direction: column;
        flex-direction: column-reverse;
        justify-content: center;
        align-items: center;
    }
}


@media (height > 80vh) {
    .modal {
        max-height: 80vh;
        overflow-y: auto;
    }
}



.delete-btn img {
    height: 25px;
    width: 25px;
    filter: invert(1);
}
